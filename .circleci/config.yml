version: 2
jobs:
  build_depends:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/dozen/mackerel-plugin-sqsd
    environment:
      - CGO_ENABLED: 0
      - GO111MODULE: "on"
    steps:
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export PATH=~/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - checkout
      - restore_cache:
          key: v0.0.1-go-tools-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - run: |
          if [ -d ~/bin ]; then exit 0; fi && \
          mkdir -p ~/bin && \
          curl -LO https://github.com/Songmu/goxz/releases/download/v0.1.0/goxz_v0.1.0_linux_amd64.tar.gz && \
          tar xvf goxz_v0.1.0_linux_amd64.tar.gz && \
          install goxz_v0.1.0_linux_amd64/goxz ~/bin/ && \
          curl -LO https://github.com/tcnksm/ghr/releases/download/v0.12.0/ghr_v0.12.0_linux_amd64.tar.gz && \
          tar xvf ghr_v0.12.0_linux_amd64.tar.gz && \
          install ghr_v0.12.0_linux_amd64/ghr ~/bin/
      - save_cache:
          key: v0.0.1-go-tools-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
          paths:
            - ~/bin
      - run: go get -v
      - save_cache:
          key: v0.0.1-go-get-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod

  test:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/dozen/mackerel-plugin-sqsd
    environment:
      - CGO_ENABLED: 0
      - GO111MODULE: "on"
    steps:
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export PATH=~/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - checkout
      - restore_cache:
          key: v0.0.1-go-tools-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - restore_cache:
          key: v0.0.1-go-get-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - run:
          name: run test
          command: |
            go test -v .

  build:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/dozen/mackerel-plugin-sqsd
    environment:
      - CGO_ENABLED: 0
      - GO111MODULE: "on"
    steps:
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export PATH=~/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - checkout
      - restore_cache:
          key: v0.0.1-go-tools-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - restore_cache:
          key: v0.0.1-go-get-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - run: make build
      - save_cache:
          key: v0.0.1-make-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /go/src/github.com/dozen/mackerel-plugin-sqsd/dist/

  release:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/dozen/mackerel-plugin-sqsd
    steps:
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export PATH=~/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - checkout
      - restore_cache:
          key: v0.0.1-go-tools-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - restore_cache:
          key: v0.0.1-go-get-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      - restore_cache:
          key: v0.0.1-make-build-{{ .Environment.CIRCLE_SHA1 }}
      - run: make release

workflows:
  version: 2
  test:
    jobs:
      - build_depends
      - test:
          requires:
            - build_depends
      - build:
          requires:
            - build_depends
  release:
    jobs:
      - build_depends:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test:
          requires:
            - build_depends
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build:
          requires:
            - build_depends
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - release:
          requires:
            - test
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
